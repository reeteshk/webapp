name: Packer build
on:
  push:
    branches: [main]

jobs:
  build:
    name: packer workflow
    runs-on: ubuntu-latest
    environment: database
    strategy: 
        matrix:
            node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.5.0
        with:
          node-version: ${{ matrix.node-version }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Zip folder creation
        run: |
          mkdir app_artifact
          zip -r webapp . -x ".git/" ".github/" "node_modules/*" "package-lock.json"
          mv webapp.zip app_artifact

      
      - name: Build Template
        
        run: |
          cd packer
          packer init ami.pkr.hcl
          packer validate ami.pkr.hcl
          packer build \
          -var-file=variables.pkrvars.hcl  ami.pkr.hcl
      - name: Retriving AMI ID
        run: |
          echo AMI_ID=$(jq -r '.builds[-1].artifact_id' ./packer/manifest.json | cut -d ":" -f2) >> $GITHUB_ENV
        shell: bash

      - name: Create Version of Launch Template
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEMO_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEMO_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

        run: |
          aws ec2 create-launch-template-version --launch-template-name autoscaling_launchtemplate --source-version 1 --launch-template-data '{"ImageId":"${{ env.AMI_ID }}"}'
          echo "Launch template ID completed"

      - name: Instance refresh auto scale to use new launch template version
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEMO_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEMO_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws autoscaling start-instance-refresh --auto-scaling-group-name autoscaling-group
          echo "Instance refresh for Launch template ID in AS completed"
